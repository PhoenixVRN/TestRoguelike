═══════════════════════════════════════════════════════════════
    🎯 BATTLE MANAGER - СИСТЕМА РАУНДОВ И РЕСПАВНА
═══════════════════════════════════════════════════════════════

Автоматическое отслеживание победы и респавн героев!

═══════════════════════════════════════════════════════════════
📦 СОЗДАННЫЕ КОМПОНЕНТЫ
═══════════════════════════════════════════════════════════════

✅ BattleManager.cs - Управление раундами и респавном

═══════════════════════════════════════════════════════════════
📋 ШАГ 1: СОЗДАТЬ BATTLE MANAGER НА СЦЕНЕ
═══════════════════════════════════════════════════════════════

1. Hierarchy → ПКМ → Create Empty
2. Назовите "BattleManager"
3. Add Component → Battle Manager

ИЛИ добавьте в существующий GameManager:
  GameManager → Add Component → Battle Manager

═══════════════════════════════════════════════════════════════
📋 ШАГ 2: НАСТРОИТЬ BATTLE MANAGER
═══════════════════════════════════════════════════════════════

BattleManager → Inspector:

┌─────────────────────────────────────────────────────────────┐
│ Battle Manager (Script)                                     │
├─────────────────────────────────────────────────────────────┤
│ ▼ Ссылки                                                    │
│   Grid Manager: Grid ⭐                                     │
│   Grid Transform: Grid ⭐ (тот же объект Grid)             │
│                                                             │
│ ▼ Настройки победы                                          │
│   Victory Delay: 2             ← Пауза после победы        │
│   Return Speed: 500            ← Скорость возврата Grid    │
│   Respawn Delay: 0.5           ← Задержка между героями    │
│                                                             │
│ ▼ Настройки                                                 │
│   Show Debug: ✓                                             │
└─────────────────────────────────────────────────────────────┘

═══════════════════════════════════════════════════════════════
📋 ШАГ 3: ПОДКЛЮЧИТЬ К GAME MANAGER
═══════════════════════════════════════════════════════════════

GameManager → Inspector:

┌─────────────────────────────────────────────────────────────┐
│ Game Manager (Script)                                       │
├─────────────────────────────────────────────────────────────┤
│ ▼ Ссылки                                                    │
│   Grid Manager: Grid                                        │
│   Wave Spawner: WaveSpawner                                 │
│   Battle Manager: BattleManager ⭐ (перетащить!)           │
└─────────────────────────────────────────────────────────────┘

═══════════════════════════════════════════════════════════════
🎬 КАК ЭТО РАБОТАЕТ
═══════════════════════════════════════════════════════════════

РАУНД 1:
────────────────────────────────────────────────────────────────
1. Игрок расставляет героев:
   👤 на (0,0)
   👤 на (1,1)

2. Нажимает START:
   → Расстановка СОХРАНЯЕТСЯ 💾
   → Grid двигается (X → 0)
   → Враги спавнятся
   → Бой начинается! ⚔️

3. Бой идёт:
   → BattleManager каждый кадр проверяет живых врагов
   → Враги умирают 💀

4. Все враги мёртвы:
   → 🎉 ПОБЕДА!
   → Пауза 2 секунды
   → Grid возвращается в начало ←
   → Все персонажи удаляются 🗑️
   → Герои респавнятся на тех же местах! ♻️
     • 👤 на (0,0)
     • 👤 на (1,1)

5. Готовы к следующей волне! 🔄

═══════════════════════════════════════════════════════════════
📊 ДЕТАЛЬНЫЙ ФЛОУ
═══════════════════════════════════════════════════════════════

OnStartButtonClicked():
  ├─> BattleManager.SaveHeroSetup()
  │     └─> Сохраняет позиции и конфиги всех Team 0
  │
  ├─> GridManager.LockPlacement()
  │     └─> Блокирует клики
  │
  ├─> MoveObjectToZero()
  │     └─> Grid двигается
  │
  └─> SpawnWaveAndStartBattle()
        ├─> WaveSpawner.SpawnWave(0)
        │     └─> Враги спавнятся
        │
        └─> BattleManager.StartBattle()
              └─> Начинает проверку каждый кадр

BattleManager.Update():
  └─> CheckBattleStatus()
        ├─> Считает живых врагов
        ├─> Считает живых игроков
        │
        ├─> Враги = 0? → OnVictory()
        │     └─> ReturnToStartAndRespawn()
        │           ├─> Пауза (Victory Delay)
        │           ├─> MoveGridToStart() ← Grid назад
        │           ├─> ClearAll() 🗑️
        │           └─> RespawnHeroes() ♻️
        │                 └─> Герои на тех же местах!
        │
        └─> Игроки = 0? → OnDefeat()
              └─> Поражение 💀

═══════════════════════════════════════════════════════════════
🧪 ТЕСТ
═══════════════════════════════════════════════════════════════

1. Создайте BattleManager на сцене
2. Настройте ссылки (Grid Manager, Grid Transform)
3. GameManager → Battle Manager: назначьте
4. Show Debug: ✓ везде

5. Play
6. Поставьте героев (запомните позиции!)
7. START → бой
8. Побейте всех врагов

Должно произойти:
  🎉 ПОБЕДА! Все враги повержены!
  🔄 Возвращаем Grid в начальную позицию...
  📍 Grid вернулся в начальную позицию
  ♻️ Респавним 2 героев...
  ✅ Warrior респавнен на (0, 0)
  ✅ Warrior респавнен на (1, 1)
  ✅ Все герои восстановлены!

═══════════════════════════════════════════════════════════════
💡 НАСТРОЙКИ
═══════════════════════════════════════════════════════════════

Быстрый респавн:
  Victory Delay: 0.5
  Return Speed: 1000
  Respawn Delay: 0.1

Красивый респавн:
  Victory Delay: 3
  Return Speed: 300
  Respawn Delay: 0.3

Медленный эпичный:
  Victory Delay: 5
  Return Speed: 200
  Respawn Delay: 0.5

═══════════════════════════════════════════════════════════════
🔧 ЧТО СОХРАНЯЕТСЯ
═══════════════════════════════════════════════════════════════

Для каждого героя сохраняется:
  ✓ Позиция в сетке (Grid Position)
  ✓ Конфигурация (CharacterConfig)
  ✓ Префаб (для респавна)

НЕ сохраняется:
  ✗ Текущее HP (всегда респавнятся с полным HP)
  ✗ Позиция в мире (возвращаются на ячейки)

═══════════════════════════════════════════════════════════════
✅ ГОТОВО!
═══════════════════════════════════════════════════════════════

Теперь после победы:
  1. Grid возвращается в начало ←
  2. Герои респавнятся на своих местах ♻️
  3. Готовы к следующей волне! 🔄

═══════════════════════════════════════════════════════════════

