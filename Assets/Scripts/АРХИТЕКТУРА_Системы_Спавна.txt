═══════════════════════════════════════════════════════════════
    🏗️ АРХИТЕКТУРА СИСТЕМЫ СПАВНА ВРАГОВ
═══════════════════════════════════════════════════════════════

📦 СТРУКТУРА КОМПОНЕНТОВ
═══════════════════════════════════════════════════════════════

                        ┌─────────────────┐
                        │  GameManager    │
                        │  (MonoBehaviour)│
                        └────────┬────────┘
                                 │
                    ┌────────────┴────────────┐
                    ▼                         ▼
           ┌─────────────────┐      ┌─────────────────┐
           │  GridManager    │      │  WaveSpawner    │
           │  (MonoBehaviour)│◄─────┤  (MonoBehaviour)│
           └────────┬────────┘      └────────┬────────┘
                    │                        │
                    │                        │
          ┌─────────┴────────┐               │
          ▼                  ▼               ▼
    ┌──────────┐      ┌──────────┐    ┌──────────────┐
    │ GridCell │      │ GridCell │    │  WaveConfig  │
    │   (0,0)  │      │   (1,1)  │    │ (ScriptableO)│
    └─────┬────┘      └─────┬────┘    └──────┬───────┘
          │                 │                 │
          │                 │                 │
          ▼                 ▼                 ▼
    ┌──────────┐      ┌──────────┐    List<EnemyData>
    │ Character│      │  Enamy   │          │
    │ (Prefab) │      │ (Prefab) │          │
    └─────┬────┘      └─────┬────┘          │
          │                 │                │
          ▼                 ▼                ▼
    ┌─────────────────────────────┐   ┌──────────────┐
    │   CharacterController       │   │  Prefab Ref  │
    │   (MonoBehaviour)           │   │  Grid Pos    │
    └──────────┬──────────────────┘   │  Random Flag │
               │                       └──────────────┘
               ▼
      ┌─────────────────┐
      │ CharacterConfig │
      │ (ScriptableO)   │
      │ Team: 0 или 1   │
      └─────────────────┘

═══════════════════════════════════════════════════════════════
🔄 ПОТОК ДАННЫХ
═══════════════════════════════════════════════════════════════

1. НАЖАТИЕ КНОПКИ START
   │
   ▼
2. GameManager.OnStartButtonClicked()
   │
   ▼
3. GameManager.SpawnWaveAndStartBattle() (Coroutine)
   │
   ▼
4. WaveSpawner.SpawnWave(0)
   │
   ▼
5. WaveSpawner читает WaveConfig.enemies[]
   │
   ▼
6. Для каждого врага:
   │
   ├─► Определяет позицию (фиксированная или случайная)
   │
   ├─► Вызывает GridManager.GetCell(position)
   │
   ├─► Вызывает GridCell.PlaceObject(enemyPrefab)
   │
   └─► GridCell создаёт Instantiate(prefab)
       │
       ▼
7. Враг появился на сцене!
   │
   ▼
8. WaveSpawner.IsSpawning() → false
   │
   ▼
9. GameManager.StartBattle()
   │
   ▼
10. Для всех персонажей:
    CharacterController.StartBattle()
    │
    ▼
11. БОЙ НАЧАЛСЯ! AI работает

═══════════════════════════════════════════════════════════════
📋 КОНФИГУРАЦИОННЫЕ ФАЙЛЫ
═══════════════════════════════════════════════════════════════

CharacterConfig (ScriptableObject)
├── characterName: string
├── maxHealth: int
├── damage: int
├── attackSpeed: float
├── attackRange: float
├── moveSpeed: float
├── characterType: enum
└── team: int ⭐ (0=игрок, 1=враг)

WaveConfig (ScriptableObject)
├── waveName: string
├── waveNumber: int
└── enemies: List<EnemySpawnData>
    ├── [0] EnemySpawnData
    │   ├── enemyPrefab: GameObject
    │   ├── gridPosition: Vector2Int
    │   └── randomPosition: bool
    ├── [1] EnemySpawnData
    │   └── ...
    └── [N] ...

═══════════════════════════════════════════════════════════════
🎮 КОМПОНЕНТЫ НА СЦЕНЕ
═══════════════════════════════════════════════════════════════

Canvas
└── Game
    ├── Grid (GridManager)
    │   ├── GridCell (0,0)
    │   ├── GridCell (0,1)
    │   ├── GridCell (1,0)
    │   └── ... (все ячейки сетки)
    │
    ├── UI Elements
    │   ├── StartButton
    │   └── ...
    │
    └── Managers
        ├── GameManager ⭐
        │   ├── gridManager → Grid
        │   ├── waveSpawner → WaveSpawner
        │   ├── startButton → StartButton
        │   └── objectToMove → ...
        │
        └── WaveSpawner ⭐
            ├── gridManager → Grid
            ├── waves[0] → NewWave.asset
            ├── spawnDelay: 0.2
            ├── spawnZoneX: (5, 9)
            └── spawnZoneY: (0, 9)

═══════════════════════════════════════════════════════════════
🔧 КАК РАБОТАЕТ AI
═══════════════════════════════════════════════════════════════

CharacterController.UpdateAI() каждый кадр:
│
├─► 1. Есть цель?
│   └─► НЕТ → FindNearestEnemy()
│       │
│       └─► Ищет всех CharacterController с другой командой (team)
│
├─► 2. Цель найдена?
│   │
│   ├─► ДА → Проверяет дистанцию
│   │   │
│   │   ├─► Близко (≤ attackRange)?
│   │   │   └─► Attack() → наносит урон
│   │   │
│   │   └─► Далеко?
│   │       └─► MoveToTarget() → движется к цели
│   │
│   └─► НЕТ → SetState(Idle)
│
└─► 3. Обновляет анимации в зависимости от состояния

═══════════════════════════════════════════════════════════════
⚔️ СИСТЕМА КОМАНД
═══════════════════════════════════════════════════════════════

Team 0 (игрок):                Team 1 (враги):
┌────────────────┐            ┌────────────────┐
│ Warrior        │            │ Enemy Warrior  │
│ Config: Team=0 │   ◄───►   │ Config: Team=1 │
│ Позиция: X≤4   │  ВРАГИ!   │ Позиция: X≥5   │
└────────────────┘            └────────────────┘

FindNearestEnemy() ищет персонажей где:
  character.GetTeam() != this.GetTeam()

Поэтому КРИТИЧНО:
  ✅ Герои → Team: 0
  ✅ Враги → Team: 1

═══════════════════════════════════════════════════════════════
📊 ПОСЛЕДОВАТЕЛЬНОСТЬ СОЗДАНИЯ
═══════════════════════════════════════════════════════════════

ШАГ 1: Создать CharacterConfig для героя
        Assets → Create → Game → Character Config
        → Warrior.asset (Team: 0)

ШАГ 2: Создать CharacterConfig для врага
        Assets → Create → Game → Character Config
        → EnemyWarrior.asset (Team: 1)

ШАГ 3: Настроить префаб Character
        Prefabs/Character → CharacterController → Config: Warrior

ШАГ 4: Настроить префаб Enamy
        Prefabs/Enamy → CharacterController → Config: EnemyWarrior

ШАГ 5: Создать WaveConfig
        Assets → Create → Game → Wave Config
        → NewWave.asset

ШАГ 6: Заполнить NewWave.enemies[]
        Element 0: Enamy, (7,5), random=false
        Element 1: Enamy, (8,3), random=false
        Element 2: Enamy, (9,7), random=false

ШАГ 7: Создать WaveSpawner на сцене
        Hierarchy → Create Empty → "WaveSpawner"
        Add Component → Wave Spawner

ШАГ 8: Настроить WaveSpawner
        Grid Manager: Grid
        Waves[0]: NewWave

ШАГ 9: Подключить к GameManager
        GameManager → Wave Spawner: WaveSpawner

ШАГ 10: ТЕСТИРОВАТЬ!

═══════════════════════════════════════════════════════════════
🐛 ОТЛАДКА
═══════════════════════════════════════════════════════════════

Включите Show Debug в:
  ✓ WaveSpawner
  ✓ GameManager
  ✓ CharacterController (у всех персонажей)

Console покажет:
  📊 Сколько ячеек найдено
  🌊 Какая волна спавнится
  ✅ Кто заспавнен и где
  ⚔️ Кто атакует кого
  💀 Кто погиб

Scene View покажет (если Show Debug):
  🔴 Красная окружность = радиус атаки
  💛 Жёлтая линия = линия к цели

═══════════════════════════════════════════════════════════════
✅ ПРОВЕРКА РАБОТОСПОСОБНОСТИ
═══════════════════════════════════════════════════════════════

1. Play → разместите героя слева (X≤4)
2. WaveSpawner → ПКМ → "Заспавнить текущую волну"
3. Враги появились справа (X≥5)? ✅
4. Нажмите Start
5. Герой и враги находят друг друга? ✅
6. Герой двигается к врагу? ✅
7. Начинается атака? ✅
8. Кто-то умирает? ✅

Если ВСЁ ✅ → СИСТЕМА РАБОТАЕТ!

═══════════════════════════════════════════════════════════════

🎯 ГОТОВО! Система расстановки врагов настроена!

═══════════════════════════════════════════════════════════════

