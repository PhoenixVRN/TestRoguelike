═══════════════════════════════════════════════════════════════
    КАК РАБОТАЕТ СИСТЕМА - Просто и понятно
═══════════════════════════════════════════════════════════════

✨ ЧТО ДЕЛАЕТ СИСТЕМА:
────────────────────────────────────────────────────────────────
При клике ЛКМ на GridCell → спавнится префаб героя в центре ячейки
При клике ПКМ на GridCell → удаляется префаб из ячейки

ВСЁ! Это всё что она делает. Просто и работает.

═══════════════════════════════════════════════════════════════

📋 НАСТРОЙКА (3 шага)
────────────────────────────────────────────────────────────────

ШАГ 1: Подготовьте Canvas
   1. Hierarchy → UI → Canvas
   2. Canvas Scaler → Scale With Screen Size

ШАГ 2: Создайте Grid с ячейками
   1. Canvas → UI → Image (назовите "Grid")
   2. Source Image: grid.png
   3. Add Component → Grid Manager
      - Prefab To Place: ваш префаб героя ⭐
      - Check Occupancy: ✓ (нельзя на занятые)
      - Right Click To Remove: ✓ (ПКМ удаляет)
      - Show Cell Markers: выкл (в игре не нужны)

ШАГ 3: Расставьте GridCell пустышки
   1. Перетащите GridCell из Prefabs в Grid
   2. Расставьте в центрах ромбов (вручную в Scene)
   3. Ctrl+D для дублирования
   4. Расставьте остальные

═══════════════════════════════════════════════════════════════

🎮 ИСПОЛЬЗОВАНИЕ
────────────────────────────────────────────────────────────────

В ИГРЕ:
   ЛКМ на ячейку → спавн героя в центре этой ячейки
   ПКМ на ячейку → удаление героя
   M → показать/скрыть маркеры
   Delete → очистить всю сетку

В КОДЕ (если нужно программно):
   GridManager grid = FindObjectOfType<GridManager>();
   GridCell cell = grid.GetCell(new Vector2Int(5, 5));
   cell.PlaceObject(heroPrefab); // Спавн в ячейке

═══════════════════════════════════════════════════════════════

💡 КАК ЭТО РАБОТАЕТ ВНУТРИ
────────────────────────────────────────────────────────────────

1. GridCell обрабатывает клик мыши
2. Передает событие в GridManager
3. GridManager берет назначенный префаб
4. Спавнит его как дочерний объект GridCell
5. Префаб появляется в центре ячейки (position = 0,0,0 локально)

═══════════════════════════════════════════════════════════════

📦 КОМПОНЕНТЫ
────────────────────────────────────────────────────────────────

GridCell.cs - компонент ячейки
   • Обрабатывает клики
   • Хранит размещенный объект
   • Показывает маркер (зеленый кружок)

GridManager.cs - менеджер сетки
   • Хранит префаб для размещения
   • Обрабатывает логику спавна/удаления
   • Управляет всеми ячейками

GridCell.prefab - префаб ячейки
   • Перетаскивайте и расставляйте вручную

═══════════════════════════════════════════════════════════════

🔧 НАСТРОЙКИ
────────────────────────────────────────────────────────────────

GridManager:
   Prefab To Place - префаб который спавнится по клику ⭐
   Check Occupancy - запретить спавн на занятые ячейки
   Right Click To Remove - ПКМ удаляет объекты
   Show Cell Markers - показывать зеленые кружки в игре
   Show Debug - логи в консоль

GridCell:
   Grid Position - координаты (для справки)
   Show Marker In Game - показывать кружок в игре
   Free Color - цвет свободной ячейки
   Occupied Color - цвет когда занята

═══════════════════════════════════════════════════════════════

💎 МНОЖЕСТВЕННЫЕ ПРЕФАБЫ (опционально)
────────────────────────────────────────────────────────────────

Если хотите размещать РАЗНЫЕ префабы:

Grid → Grid Manager:
   Prefabs (список):
      Size: 3
      Element 0: воин
      Element 1: маг
      Element 2: лучник

В игре:
   1, 2, 3 - выбор префаба
   ← → - переключение
   Затем ЛКМ для размещения выбранного

═══════════════════════════════════════════════════════════════

❓ ВОПРОСЫ И ОТВЕТЫ
────────────────────────────────────────────────────────────────

❓ Герои спавнятся не в центре ячейки?
✅ Проверьте что Pivot у префаба = Center (0.5, 0.5)

❓ Клики не работают?
✅ У GridCell должен быть Image компонент
✅ Image → Raycast Target должен быть включен
✅ На Canvas должен быть GraphicRaycaster

❓ Хочу чтобы спавнился не по клику а программно?
✅ GridManager grid = FindObjectOfType<GridManager>();
✅ grid.GetCell(new Vector2Int(x, y)).PlaceObject(prefab);

❓ Как удалить героя программно?
✅ cell.RemoveObject();

❓ Как проверить занята ли ячейка?
✅ if (cell.IsOccupied()) { ... }

❓ Хочу спавнить в случайной ячейке?
✅ List<GridCell> free = grid.GetFreeCells();
✅ free[Random.Range(0, free.Count)].PlaceObject(prefab);

═══════════════════════════════════════════════════════════════

📂 ФАЙЛЫ
────────────────────────────────────────────────────────────────

Assets/
├── Prefabs/
│   └── GridCell.prefab           ← Расставляйте вручную
└── Scripts/
    ├── GridCell.cs               ← Компонент ячейки
    ├── GridManager.cs            ← Менеджер сетки
    └── Editor/
        └── GridCellCreator.cs    ← Автосоздание (Tools→Grid Cell Creator)

═══════════════════════════════════════════════════════════════

ВСЁ! Система работает. Расставьте ячейки и кликайте! 🎉

═══════════════════════════════════════════════════════════════
